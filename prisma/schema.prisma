// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       Int    @id @default(autoincrement()) // @id is primary key
  username String @db.VarChar(50)
  email    String @unique @db.VarChar(50)
  password String @db.VarChar(100)

  @@map("admin")
}

model Ruang_kelas {
  id            Int      @id @default(autoincrement()) // @id is primary key
  nomor_ruangan Int
  kapasitas     Int
  tersedia      Boolean?
  Kelas         Kelas[]

  @@unique([nomor_ruangan])
  @@map("ruang_kelas")
}

model Kelas {
  id                Int    @id @default(autoincrement())
  nomor_ruang_kelas Int
  kelas             String @db.VarChar(30)

  ruang_kelas Ruang_kelas @relation(fields: [nomor_ruang_kelas], references: [nomor_ruangan])
  murid       Murid[]
  Jadwal      Jadwal[]
  Guru        Guru[]

  @@map("kelas")
}

model Guru {
  id       Int    @id @default(autoincrement()) // @id is primary key
  username String @db.VarChar(50)
  email    String @unique @db.VarChar(50)
  password String @db.VarChar(100)
  id_kelas Int?

  kelas  Kelas?   @relation(fields: [id_kelas], references: [id])
  Jadwal Jadwal[]

  @@map("guru")
}

model Pelajaran {
  id        Int      @id @default(autoincrement()) // @id is primary key
  pelajaran String   @db.VarChar(50)
  Jadwal    Jadwal[]

  @@map("pelajaran")
}

model Murid {
  id       Int    @id @default(autoincrement()) // @id is primary key
  username String @db.VarChar(50)
  email    String @unique @db.VarChar(50)
  password String @db.VarChar(100)
  id_kelas Int?

  kelas           Kelas?            @relation(fields: [id_kelas], references: [id])
  Kehadiran_murid Kehadiran_murid[]

  @@map("murid")
}

model Jadwal {
  id           Int     @id @default(autoincrement())
  id_pelajaran Int
  id_guru      Int
  id_kelas     Int
  hari         Int // 0-6
  mulai        Json // {jam:0,menit:0}
  berakhir     Json // {jam:24,menit:59}
  status       Boolean @default(false) // false sedang berlangsung

  pelajaran Pelajaran @relation(fields: [id_pelajaran], references: [id])
  guru      Guru      @relation(fields: [id_guru], references: [id])
  kelas     Kelas     @relation(fields: [id_kelas], references: [id])

  Kehadiran_murid Kehadiran_murid[]
  Kehadiran_guru  Kehadiran_guru[]

  @@map("jadwal")
}

model Kehadiran_murid {
  id         Int        @id @default(autoincrement())
  id_jadwal  Int
  tanggal    DateTime
  id_murid   Int
  keterangan Keterangan

  jadwal Jadwal @relation(fields: [id_jadwal], references: [id])
  murid  Murid  @relation(fields: [id_murid], references: [id])

  @@map("kehadiran_murid")
}

model Kehadiran_guru {
  id        Int      @id @default(autoincrement())
  id_jadwal Int
  id_guru   Int
  tanggal   DateTime

  jadwal Jadwal @relation(fields: [id_jadwal], references: [id])

  @@map("kehadiran_guru")
}

enum Keterangan {
  absen
  ijin
  hadir
}
